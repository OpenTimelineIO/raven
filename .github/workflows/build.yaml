name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libglfw3-dev libgtk-3-dev

    - name: Build
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build . --parallel 4

    - name: Check Product
      run: |
        cd build
        ls -l
        file raven

    - name: Package Product
      run: |
        cd build
        chmod +x raven
        zip -r raven-linux.zip raven

    - name: Archive Product
      uses: actions/upload-artifact@v1
      with:
        name: raven-linux.zip
        path: build/raven-linux.zip

  MacOS:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Build
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build . --parallel 4

    - name: Check Product
      run: |
        cd build
        ls -l
        file raven

    - name: Package Product
      run: |
        cd build
        chmod +x raven
        zip -r raven-mac.zip raven

    - name: Archive Product
      uses: actions/upload-artifact@v1
      with:
        name: raven-mac.zip
        path: build/raven-mac.zip

  Emscripten:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install Dependencies
      run: |
        wget -q https://github.com/emscripten-core/emsdk/archive/master.tar.gz
        tar -xvf master.tar.gz
        emsdk-master/emsdk update
        emsdk-master/emsdk install latest
        emsdk-master/emsdk activate latest

    - name: Build
      run: |
        source emsdk-master/emsdk_env.sh
        mkdir build-web
        cd build-web
        emcmake cmake ..
        cmake --build . --parallel 4

    - name: Check Product
      run: |
        ls -l build-web

    - name: Package Product
      run: |
        cd build-web
        zip -r raven-web.zip raven.html raven.wasm raven.js raven.worker.js

    - name: Archive Product
      uses: actions/upload-artifact@v1
      with:
        name: raven-web.zip
        path: build-web/raven-web.zip
  Windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Build
      run: |
        mkdir build_win64
        cd build_win64
        cmake ..
        cmake --build . --config Debug --parallel 4
        cmake --build . --config Release --parallel 4

    - name: Check Product
      shell: bash
      run: |
        cd build_win64
        pwd
        ls -l
        ls -l ./Debug/
        ls -l ./Release/
        file ./Debug/raven.exe
        file ./Release/raven.exe

    - name: Archive Product
      uses: actions/upload-artifact@v3
      with:
        name: raven-windows-x64.zip
        path: |
          build_win64/Release/*
          build_win64/Debug/*
